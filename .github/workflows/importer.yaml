name: Import Catalog

on:
  workflow_dispatch:

concurrency:
  group: catalog-main
  cancel-in-progress: false

jobs:
  import-artifacts:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/prefapp/firestarter:main-full
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Generate app installation token
        id: generate-token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.APP_ID_GITHUB }}
          application_private_key: ${{ secrets.APP_PEM_FILE_GITHUB }}
          #organization: prefapp

      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Import catalog
        env:
          TOKEN: ${{ steps.generate-token.outputs.token }}
          ORG: ${{vars.FIRESTARTER_ORG}}
          S3_BUCKET: ${{vars.FIRESTARTER_S3_BUCKET}}
          S3_REGION: ${{vars.S3_REGION}}
          REPO_CATALOG: catalog
          TERRAFORM_WORK: "/tmp"
          TERRAFORM_BIN: /usr/local/bin/terraform
          PROVIDER_TYPE: ${{vars.STATUS_PROVIDER_TYPE}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          DEBUG: "*"
          CSV_PATH: "/tmp"
          DEFAULT_OWNER: ${{vars.DEFAULT_OWNER}}
          INCLUIDE_DOT_REPOS: ${{vars.INCLUIDE_DOT_REPOS}}
        run: |
          cd /library
          ./run.sh import --all -c /__w/catalog/catalog

      - name: Create csv report
        uses: actions/upload-artifact@v3
        with:
          name: report
          path: /tmp/*.csv

      - name: Push catalog
        run: |
          git config --global --add safe.directory /__w/catalog/catalog
          cd catalog
          status=$(git status --porcelain)
          if [ -n "$status" ]; then
            git config user.name 'backstage'
            git config user.email 'backstage@backstage.backstage'
            git add .
            git commit -m "Add imported catalog"
            git push origin ${GITHUB_REF_NAME}
          else
            echo "No new changes to commit"
          fi

      - name: Generate results info
        run: |
          # Count results
          lines=$(wc -l < /tmp/import.csv)
          count=$((lines - 1))
          # Generate table data
          header=$(head -1 /tmp/import.csv)
          data=$(tail -n +2 /tmp/import.csv)
          header_row=$(echo "$header" | awk -F ';' '{ printf "| %s ", $1; for (i=2; i<=NF; i++) printf "| %s ", $i; printf "|\n"}')
          separator_row=$(echo "$header" | awk -F ';' '{ for (i=1; i<=NF; i++) printf "| -- "; printf "|\n"}')
          data_rows=$(echo "$data" | awk -F ';' '{ printf "| %s ", $1; for (i=2; i<=NF; i++) printf "| %s ", $i; printf "|\n"}')
          markdown_table=$(echo "$header_row"; echo "$separator_row"; echo "$data_rows")
          echo "## Artifacts imported: ${count}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "${markdown_table}" >> $GITHUB_STEP_SUMMARY

      - name: Validate resultant catalog
        env:
          CATALOG_MAIN_STATE: ${{ github.workspace }}/catalog
        run: |
          cd /library
          ./run.sh validate
