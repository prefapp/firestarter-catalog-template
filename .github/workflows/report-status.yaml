name: Report by Status

on:
  workflow_dispatch:
    inputs:
      status:
        description: "Status for the report"
        required: true
        default: "PENDING_REVIEW"

jobs:
  report:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/prefapp/firestarter:main-slim
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          path: main_state

      - name: Generate report
        id: report
        env:
          CATALOG_MAIN_STATE: ${{ github.workspace }}/main_state/catalog
          DEBUG: "firestarter:*"
        run: |
          cd /library
          ./run.sh list -f /tmp/status_report.csv -s ${{ github.event.inputs.status }}

      - name: Upload report
        uses: actions/upload-artifact@v3
        with:
          name: status_report
          path: /tmp/status_report.csv

      - name: Generate results info
        run: |
          # Count results
          lines=$(wc -l < /tmp/status_report.csv)
          count=$((lines - 1))
          # Generate table data
          header=$(head -1 /tmp/status_report.csv)
          data=$(tail -n +2 /tmp/status_report.csv)
          header_row=$(echo "$header" | awk -F ';' '{ printf "| %s ", $1; for (i=2; i<=NF; i++) printf "| %s ", $i; printf "|\n"}')
          separator_row=$(echo "$header" | awk -F ';' '{ for (i=1; i<=NF; i++) printf "| -- "; printf "|\n"}')
          data_rows=$(echo "$data" | awk -F ';' '{ printf "| %s ", $1; for (i=2; i<=NF; i++) printf "| %s ", $i; printf "|\n"}')
          markdown_table=$(echo "$header_row"; echo "$separator_row"; echo "$data_rows")
          echo "## Artifacts in status ${{ github.event.inputs.status }}: ${count}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "${markdown_table}" >> $GITHUB_STEP_SUMMARY
